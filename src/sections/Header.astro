---
import { MOBILE_MENU_CONTENT_ID } from '@/consts/mobile-menu'
import HamburgerButton from '@/components/HamburgerButton.astro'
import LogoIcon from '@/icons/Logo.svg'
import LinkSponsor from '@/components/LinkSponsor.astro'
import LinkEntrada from '@/components/LinkEntrada.astro'
import Menu from '@/components/Menu.astro'

const sections = [
  { name: 'HOME', href: '/#home' },
  { name: 'AGENDA', href: '/#agenda' },
  { name: 'SPEAKERS', href: '/#speakers' },
  { name: 'SPONSORS', href: '/#sponsors' },
]
---

<header
  class="py-6 z-[999] fixed top-0 left-0 right-0 bg-transparent transition-colors duration-300 px-section"
>
  <div class="flex gap-4 justify-between items-center max-w-[90rem] mx-auto">
    <div class="flex flex-row gap-x-3 md:items-center items-start justify-center">
      <LogoIcon class="md:size-16 size-9" />
      <div>
        <h5
          class="font-clash font-semibold max-md:h-4 md:text-2xl text-lg flex flex-row items-center gap-x-2 text-white"
        >
          JSConf Espa√±a
          <span
            class="rounded-full bg-javascript text-black font-semibold md:text-lg text-xs md:px-3 px-2 leading-none flex justify-center items-center"
            >2025
          </span>
        </h5>
        <span class="uppercase font-light opacity-80 text-sm text-white max-md:text-xs"
          >1 MARZO 2025</span
        >
      </div>
    </div>
    <div class="text-white">
      <Menu />
    </div>
    <div class="hidden lg:flex items-center gap-4">
      <LinkSponsor style="transparent" />
      <LinkEntrada style="yellow" />
    </div>
    <HamburgerButton class:list="block lg:hidden" id="menuButton" />
    <div
      class="fixed inset-0 z-[888] flex w-screen h-screen flex-col items-center overflow-x-auto lg:hidden backdrop-blur-lg bg-black/85"
      id={MOBILE_MENU_CONTENT_ID}
    >
      <aside class="flex min-h-16 w-full items-center justify-end px-6 pt-6">
        <HamburgerButton id="innerMenuButton" />
      </aside>
      <nav class="navContent flex w-full flex-col items-start justify-end px-6 gap-5 mt-auto mb-8">
        {
          sections.map(({ name, href }, key) => (
            <>
              <a
                href={href}
                class:list={['text-white font-clash text-5xl font-medium']}
                id={`navmob-link-${key}`}
              >
                {name.charAt(0).toUpperCase() + name.slice(1).toLowerCase()}
              </a>
            </>
          ))
        }
        <LinkSponsor style="transparent" />
        <LinkEntrada style="yellow" />
      </nav>
    </div>
  </div>
</header>
<style>
  #menuMobileContent {
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.3s;
    scrollbar-gutter: stable;
  }

  #menuMobileContent.open {
    opacity: 1;
    pointer-events: all;
  }

  @media (prefers-reduced-motion) {
    #menuMobileContent {
      transition: opacity 0s;
    }
    header {
      transition: none;
    }
  }
</style>
<script>
  function toggleMenu(
    nav: HTMLElement | null,
    menuMobileContent: HTMLElement | null,
    innerMenuButton: HTMLElement | null
  ) {
    menuMobileContent?.classList.toggle('open')
    nav?.classList.toggle('open')
    innerMenuButton?.classList.toggle('open')
    document.body.classList.toggle('overflow-hidden')
    document.body.classList.toggle('lg:overflow-auto')
  }

  function headerBgTransition() {
    const header = document.querySelector('header') as HTMLElement
    if (window.scrollY > 10) {
      header.classList.add('bg-black/50', 'backdrop-blur')
      header.classList.remove('bg-transparent')
    } else {
      header.classList.add('bg-transparent')
      header.classList.remove('bg-black/50', 'backdrop-blur')
    }
  }

  window.addEventListener('scroll', () => {
    headerBgTransition()
  })

  window.onload = () => {
    headerBgTransition() // if the user relaods the page, to check if the header should be transparent or not

    const nav = document.querySelector('nav') as HTMLElement
    const menuButton = document.querySelector('#menuButton') as HTMLElement
    const innerMenuButton = document.querySelector('#innerMenuButton') as HTMLElement
    const menuMobileContext = document.getElementById('menuMobileContent') as HTMLElement

    const linksMobile: NodeListOf<HTMLAnchorElement> =
      document.querySelectorAll('a[id^="navmob-link-"]')

    function handleLinkClick(isMobile: boolean) {
      if (isMobile) {
        toggleMenu(nav, menuMobileContext, innerMenuButton)
        menuButton.classList.toggle('hidden')
      }
    }

    linksMobile.forEach((link) => {
      link.addEventListener('click', () => handleLinkClick(true))
    })

    menuButton?.addEventListener('click', () => {
      menuButton?.classList.toggle('hidden')
      toggleMenu(nav, menuMobileContext, innerMenuButton)
    })
    innerMenuButton?.addEventListener('click', () => {
      menuButton?.classList.toggle('hidden')
      toggleMenu(nav, menuMobileContext, innerMenuButton)
    })

    if (menuMobileContext?.classList.contains('open')) {
      toggleMenu(nav, menuMobileContext, innerMenuButton)
    }
  }
</script>
